require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe MthSettlementsController do

  def mock_mth_settlement(stubs={})
    @mock_mth_settlement ||= mock_model(MthSettlement, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all mth_settlements as @mth_settlements" do
      MthSettlement.stub(:all) { [mock_mth_settlement] }
      get :index
      assigns(:mth_settlements).should eq([mock_mth_settlement])
    end
  end

  describe "GET show" do
    it "assigns the requested mth_settlement as @mth_settlement" do
      MthSettlement.stub(:find).with("37") { mock_mth_settlement }
      get :show, :id => "37"
      assigns(:mth_settlement).should be(mock_mth_settlement)
    end
  end

  describe "GET new" do
    it "assigns a new mth_settlement as @mth_settlement" do
      MthSettlement.stub(:new) { mock_mth_settlement }
      get :new
      assigns(:mth_settlement).should be(mock_mth_settlement)
    end
  end

  describe "GET edit" do
    it "assigns the requested mth_settlement as @mth_settlement" do
      MthSettlement.stub(:find).with("37") { mock_mth_settlement }
      get :edit, :id => "37"
      assigns(:mth_settlement).should be(mock_mth_settlement)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created mth_settlement as @mth_settlement" do
        MthSettlement.stub(:new).with({'these' => 'params'}) { mock_mth_settlement(:save => true) }
        post :create, :mth_settlement => {'these' => 'params'}
        assigns(:mth_settlement).should be(mock_mth_settlement)
      end

      it "redirects to the created mth_settlement" do
        MthSettlement.stub(:new) { mock_mth_settlement(:save => true) }
        post :create, :mth_settlement => {}
        response.should redirect_to(mth_settlement_url(mock_mth_settlement))
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved mth_settlement as @mth_settlement" do
        MthSettlement.stub(:new).with({'these' => 'params'}) { mock_mth_settlement(:save => false) }
        post :create, :mth_settlement => {'these' => 'params'}
        assigns(:mth_settlement).should be(mock_mth_settlement)
      end

      it "re-renders the 'new' template" do
        MthSettlement.stub(:new) { mock_mth_settlement(:save => false) }
        post :create, :mth_settlement => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested mth_settlement" do
        MthSettlement.stub(:find).with("37") { mock_mth_settlement }
        mock_mth_settlement.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :mth_settlement => {'these' => 'params'}
      end

      it "assigns the requested mth_settlement as @mth_settlement" do
        MthSettlement.stub(:find) { mock_mth_settlement(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:mth_settlement).should be(mock_mth_settlement)
      end

      it "redirects to the mth_settlement" do
        MthSettlement.stub(:find) { mock_mth_settlement(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(mth_settlement_url(mock_mth_settlement))
      end
    end

    describe "with invalid params" do
      it "assigns the mth_settlement as @mth_settlement" do
        MthSettlement.stub(:find) { mock_mth_settlement(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:mth_settlement).should be(mock_mth_settlement)
      end

      it "re-renders the 'edit' template" do
        MthSettlement.stub(:find) { mock_mth_settlement(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested mth_settlement" do
      MthSettlement.stub(:find).with("37") { mock_mth_settlement }
      mock_mth_settlement.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the mth_settlements list" do
      MthSettlement.stub(:find) { mock_mth_settlement }
      delete :destroy, :id => "1"
      response.should redirect_to(mth_settlements_url)
    end
  end

end
